// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using microwave_benner.Infra.Data.Context;

#nullable disable

namespace microwave_benner.Infra.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240908075844_create_users_table")]
    partial class create_users_table
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("microwave_benner.Domain.Entities.HeatingProgram", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<bool>("custom")
                        .HasColumnType("boolean");

                    b.Property<string>("food")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<char>("heatingChar")
                        .HasMaxLength(1)
                        .HasColumnType("character(1)");

                    b.Property<string>("instructions")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("power")
                        .HasColumnType("integer");

                    b.Property<int>("time")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("heatingPrograms", (string)null);

                    b.HasData(
                        new
                        {
                            id = 1,
                            custom = false,
                            food = "Pipoca (de micro-ondas)",
                            heatingChar = '*',
                            instructions = "Observar o barulho de estouros do milho, caso houver um intervalo de mais de 10 segundos entre um estouro e outro, interrompa o aquecimento.",
                            name = "Pipoca",
                            power = 7,
                            time = 180
                        },
                        new
                        {
                            id = 2,
                            custom = false,
                            food = "Leite",
                            heatingChar = '#',
                            instructions = "Cuidado com aquecimento de líquidos, o choque térmico aliado ao movimento do recipiente pode causar fervura imediata causando risco de queimaduras.",
                            name = "Leite",
                            power = 5,
                            time = 300
                        },
                        new
                        {
                            id = 3,
                            custom = false,
                            food = "Carne em pedaço ou fatias",
                            heatingChar = '=',
                            instructions = "Interrompa o processo na metade e vire o conteúdo com a parte de baixo para cima para o descongelamento uniforme.",
                            name = "Carnes de boi",
                            power = 4,
                            time = 840
                        },
                        new
                        {
                            id = 4,
                            custom = false,
                            food = "Frango (qualquer corte)",
                            heatingChar = '%',
                            instructions = "Interrompa o processo na metade e vire o conteúdo com a parte de baixo para cima para o descongelamento uniforme.",
                            name = "Frango",
                            power = 7,
                            time = 480
                        },
                        new
                        {
                            id = 5,
                            custom = false,
                            food = "Feijão congelado",
                            heatingChar = '$',
                            instructions = "Deixe o recipiente destampado e em casos de plástico, cuidado ao retirar o recipiente pois o mesmo pode perder resistência em altas temperaturas.",
                            name = "Feijão",
                            power = 9,
                            time = 480
                        });
                });

            modelBuilder.Entity("microwave_benner.Domain.Entities.HeatingTask", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<DateTime?>("endTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("heatingProgramId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("pauseTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("power")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("startTime")
                        .IsRequired()
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("time")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("heatingProgramId");

                    b.ToTable("heatingTasks", (string)null);
                });

            modelBuilder.Entity("microwave_benner.Domain.Entities.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("id");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("microwave_benner.Domain.Entities.HeatingTask", b =>
                {
                    b.HasOne("microwave_benner.Domain.Entities.HeatingProgram", "heatingProgram")
                        .WithMany()
                        .HasForeignKey("heatingProgramId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("heatingProgram");
                });
#pragma warning restore 612, 618
        }
    }
}
